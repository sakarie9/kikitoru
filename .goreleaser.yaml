# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
  - id: kikitoru-linux-amd64
    main: ./
    binary: kikitoru
    goarch:
      - amd64
    goos:
      - linux
    env:
      - BUILD_HOST=x86_64-linux-gnu
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
      - CFLAGS=-I/usr/x86_64-linux-gnu/include:$CFLAGS
      - CPPFLAGS=-I/usr/x86_64-linux-gnu/include:$CPPFLAGS
      - LDFLAGS=-L/usr/x86_64-linux-gnu/lib:$LDFLAGS
      - PKG_CONFIG_PATH=/usr/x86_64-linux-gnu/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-linux-amd64-v3
    main: ./
    binary: kikitoru
    goarch:
      - amd64
    goos:
      - linux
    goamd64:
      - v3
    env:
      - GIN_MODE=release
      - BUILD_HOST=x86_64-linux-gnu
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
      - CFLAGS=-I/usr/x86_64-linux-gnu/include:$CFLAGS
      - CPPFLAGS=-I/usr/x86_64-linux-gnu/include:$CPPFLAGS
      - LDFLAGS=-L/usr/x86_64-linux-gnu/lib:$LDFLAGS
      - PKG_CONFIG_PATH=/usr/x86_64-linux-gnu/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-linux-arm64
    main: ./
    binary: kikitoru
    goarch:
      - arm64
    goos:
      - linux
    env:
      - BUILD_HOST=aarch64-linux-gnu
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
      - CFLAGS=-I/usr/aarch64-linux-gnu/include:$CFLAGS
      - CPPFLAGS=-I/usr/aarch64-linux-gnu/include:$CPPFLAGS
      - LDFLAGS=-L/usr/aarch64-linux-gnu/lib:$LDFLAGS
      - PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-linux-arm
    main: ./
    binary: kikitoru
    goarch:
      - arm
    goos:
      - linux
    goarm:
      - 7
    env:
      - BUILD_HOST=arm-linux-gnueabi
      - CC=arm-linux-gnueabi-gcc
      - CXX=arm-linux-gnueabi-g++
      - CFLAGS=-I/usr/arm-linux-gnueabi/include:$CFLAGS
      - CPPFLAGS=-I/usr/arm-linux-gnueabi/include:$CPPFLAGS
      - LDFLAGS=-L/usr/arm-linux-gnueabi/lib:$LDFLAGS
      - PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-windows-amd64
    main: ./
    binary: kikitoru
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-windows-arm64
    main: ./
    binary: kikitoru
    goarch:
      - arm64
    goos:
      - windows
    env:
      - CC=/llvm-mingw/bin/aarch64-w64-mingw32-gcc
      - CXX=/llvm-mingw/bin/aarch64-w64-mingw32-g++
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-darwin-amd64
    main: ./
    binary: kikitoru
    goarch:
      - amd64
    goos:
      - darwin
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

  - id: kikitoru-darwin-arm64
    main: ./
    binary: kikitoru
    goarch:
      - arm64
    goos:
      - darwin
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    ldflags:
      - -s -w -X config.version.VERSION=v{{.Tag}}

dockers:
  - id: kikitoru-linux-amd64-docker
    image_templates:
      - "ghcr.io/sakarie9/kikitoru:{{.Tag}}-amd64"
      - "ghcr.io/sakarie9/kikitoru:latest-amd64"
    goarch: amd64
    goos: linux
    use: buildx
    dockerfile: 'goreleaser.dockefile'
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

  - id: kikitoru-linux-amd64v3-docker
    image_templates:
      - "ghcr.io/sakarie9/kikitoru:{{.Tag}}-amd64v3"
      - "ghcr.io/sakarie9/kikitoru:latest-amd64v3"
    goarch: amd64
    goos: linux
    goamd64: v3
    use: buildx
    dockerfile: 'goreleaser.dockefile'
    build_flag_templates:
      - "--platform=linux/amd64/v3"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

  - id: kikitoru-linux-arm64-docker
    image_templates:
      - "ghcr.io/sakarie9/kikitoru:{{.Tag}}-arm64"
      - "ghcr.io/sakarie9/kikitoru:latest-arm64"
    goarch: arm64
    goos: linux
    use: buildx
    dockerfile: 'goreleaser.dockefile'
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

  - id: kikitoru-linux-arm-docker
    image_templates:
      - "ghcr.io/sakarie9/kikitoru:{{.Tag}}-arm"
      - "ghcr.io/sakarie9/kikitoru:latest-arm"
    goarch: arm
    goos: linux
    goarm: 7
    use: buildx
    dockerfile: 'goreleaser.dockefile'
    build_flag_templates:
      - "--platform=linux/arm/7"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

archives:
  - id: kikitoru
    builds:
      - kikitoru-linux-amd64
      - kikitoru-linux-amd64-v3
      - kikitoru-linux-arm64
      - kikitoru-linux-arm
      - kikitoru-windows-amd64
      - kikitoru-windows-arm64
      - kikitoru-darwin-amd64
      - kikitoru-darwin-arm64
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    wrap_in_directory: true
    format: tar.gz
#    files:
#      - none*
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

release:
  github:
    owner: sakarie9
    name: kikitoru
  prerelease: auto
  mode: replace
  draft: true
  replace_existing_draft: true
